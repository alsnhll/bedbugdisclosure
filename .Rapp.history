plot(PREV,breaks=18)
barplot(PREV,breaks=18)
barplot(PREV,breaks=18, color=Maroon)
barplot(PREV,breaks=18, color='dark red')
barplot(PREV,breaks=18, color='red')
?barplot
barplot(PREV,breaks=18, col='dark red')
cases_by_age
count
CUTS
cases_by_age>a
cases_by_age[a:b]
a
b
a<-0
b<-5
cases_by_age[a:b]
cases_by_age[b:b+5]
b
CUTS<-0:18*5#
PREV<-CUTS*NA#
for (i in 1:18)#
#
	{a<-CUTS[i]#
	 b<-CUTS[i]#
  	PREV[i-1]<-sum(cases_by_age[a:(a+4)])/sum(count[a:(a+4)])#
  	}#
barplot(PREV,breaks=18, col='dark red')
cases_by_age
barplot(PREV,breaks=18, col='dark red')#
#
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels#
barplot(PREV,breaks=18, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,5+max(PREV)),#
        xlab = "",#
        space=1)#
#rotate 60 degrees, srt=60#
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = paste(CUTS), cex=0.65)#
)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels#
barplot(PREV,breaks=18, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,5+max(PREV)),#
        xlab = "",#
        space=1),#
#rotate 60 degrees, srt=60#
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = paste(CUTS), cex=0.65)#
)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels#
barplot(PREV,breaks=18, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,5+max(PREV)),#
        xlab = "")
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,5+max(PREV)),#
        xlab = "")
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,.5+max(PREV)),#
        xlab = "")
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,.08),#
        xlab = "")
#rotate 60 degrees, srt=60#
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = paste(CUTS), cex=0.65)#
)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = paste(CUTS, cex=0.65))#
)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = CUTS, cex=0.65))#
)
CUTS
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = CUTS, cex=0.65)#
)
end_point
text(seq(1.5,18,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = CUTS, cex=0.65)#
)
text(seq(1.5,18,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = CUTS, cex=0.65)
par(las=2)#
#
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,.08),#
        xlab = "")
text(seq(1.5,18,by=2), par("usr")[3]-0.25, #
     srt = 60, adj= 1, xpd = TRUE,#
     labels = CUTS, cex=0.65)
par(las=2)#
#
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,.08),#
        xlab = CUTS)
barplot(PREV, col='dark red', main="",#
ylab="Prevalence", ylim=c(0,.08),#
        xlab = CUTS, at=1:18)
head(C4)
ls()
head(chains)
head(chain_data)
head(chains_data)
getwd()
setwd("/Users/mzlevy/Documents/Epi_in_R/Epi_in_R_UGA")
ulong
count
MOVIE
getageprob
obsgeodata
widthT<-c(.5,.5,.5,.5,.5,.5,.5,.5,.5,0,0)
MOVIE(chains_data,3,44900,450000)
pDIST
MOVIE(chains_data,3,4400,4500)
MOVIE(chains_data,2,4400,4500)
MOVIE(chains_data,4,4400,4500)
MOVIE(chains_data,1,4400,4500)
epi
num_obs
epicetners
epicenters
dise
epicenters<-3
MOVIE(chains_data,3,4400,4500)
MOVIE
epi
dim(pDIST)
head(pDIST)
MOVIE(chains_data,3,4400,4500)
MOVIE
reps <- (last - first) + 1#
    nf <- layout(matrix(c(1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 4, 4, #
        1, 1, 5, 5, 1, 1, 6, 6), 5, 4, byrow = TRUE), width = c(8, #
        8, 4, 4), height = c(8, 4, 4, 4, 4), respect = TRUE)#
    epicenters <<- epicenters#
    endT <- epicenters#
    endE <- endT + epicenters#
    endRF <- endE + 2 + num_covariates#
    DIS <- matrix(nrow = 994, ncol = epicenters)#
    EXP <- matrix(nrow = 994, ncol = epicenters)#
    maxEXP <- 1:994 * 0#
    Tchain <- matrix(nrow = reps, ncol = epicenters)#
    Echain <- matrix(nrow = reps, ncol = epicenters)#
    for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))#
        }
edit(MOVIE)
reps <- (last - first) + 1#
    nf <- layout(matrix(c(1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 4, 4, #
        1, 1, 5, 5, 1, 1, 6, 6), 5, 4, byrow = TRUE), width = c(8, #
        8, 4, 4), height = c(8, 4, 4, 4, 4), respect = TRUE)#
    epicenters <<- epicenters#
    endT <- epicenters#
    endE <- endT + epicenters#
    endRF <- endE + 2 + num_covariates#
    DIS <- matrix(nrow = 994, ncol = epicenters)#
    EXP <- matrix(nrow = 994, ncol = epicenters)#
    maxEXP <- 1:994 * 0#
    Tchain <- matrix(nrow = reps, ncol = epicenters)#
    Echain <- matrix(nrow = reps, ncol = epicenters)#
    for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))
last<-5000
first<-4000
reps <- (last - first) + 1#
    nf <- layout(matrix(c(1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 4, 4, #
        1, 1, 5, 5, 1, 1, 6, 6), 5, 4, byrow = TRUE), width = c(8, #
        8, 4, 4), height = c(8, 4, 4, 4, 4), respect = TRUE)#
    epicenters <<- epicenters#
    endT <- epicenters#
    endE <- endT + epicenters#
    endRF <- endE + 2 + num_covariates#
    DIS <- matrix(nrow = 994, ncol = epicenters)#
    EXP <- matrix(nrow = 994, ncol = epicenters)#
    maxEXP <- 1:994 * 0#
    Tchain <- matrix(nrow = reps, ncol = epicenters)#
    Echain <- matrix(nrow = reps, ncol = epicenters)#
    for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))
edit(MOVIE)
for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))#
        }
maxEXP <- get_maxEXP(EXP)#
        model_prob <- getprob(maxEXP, B, RF)#
        plot(long, lat, cex = maxEXP)#
        title(main = paste("Chain", u, "     Likelihood = ", #
            signif(L, digits = 3), sep = " "), cex.main = 3, #
            outer = FALSE)#
        points(long[POS == 1], lat[POS == 1], cex = maxEXP[POS == #
            1], col = "red", pch = 21, lwd = 4)#
        for (i in 1:epicenters) {#
            points(ulong[epi[i]], ulat[epi[i]], cex = 9, bg = i + #
                2, pch = 23)#
            text(ulong[epi[i]], ulat[epi[i]], labels = round(IntroT[i]), #
                cex = 1.8)#
        }
estimated_cases_by_age <- rep(0, max_age)#
        for (i in 1:max_age) {#
            estimated_cases_by_age[i] <- getageprob(i, i, model_prob)[[1]]#
            pcount[i] <- getageprob(i, i, prob)[[2]]#
        }#
        plot(cases_by_age/count, cex = count/10, ylim = c(0, #
            0.15), col = 1, pch = 21, xlab = "Age", ylab = "Prevalence", #
            cex.axis = 1.4, lwd = 2)#
        points(estimated_cases_by_age/pcount, cex = pcount/10, #
            ylim = c(0, 0.15), col = 4, pch = 21, lwd = 2)#
        INTROT <- unlist(IntroT)#
        barplot(horiz = TRUE, height = INTROT, xlim = c(0, 40), #
            col = (1:epicenters) + 2, xlab = "Time of Introduction", #
            cex.axis = 2, cex = 2, width = widthT[epicenters], #
            ylim = c(0, 4))#
        barplot(horiz = TRUE, height = R, xlim = c(0, 80), col = "orange", #
            xlab = "RATE", cex.axis = 2, cex = 2, names.arg = "  Rate")#
        RFcol <- c(0, 0)#
        ifelse(RF[1] > 0, RFcol[1] <- "black", RFcol[1] <- "red")#
        ifelse(RF[2] > 0, RFcol[2] <- "black", RFcol[2] <- "red")#
        barplot(horiz = TRUE, height = exp(RF[1]), xlim = c(exp(-0.06), #
            exp(0.06)), col = RFcol[1], xlab = "Increase of          Risk", #
            ylab = "", xpd = FALSE, cex.axis = 1.4, cex = 2, #
            names.arg = "    Bug Density")#
        barplot(horiz = TRUE, height = exp(RF[2]), xlim = c(0, #
            3), col = RFcol[2], xlab = "Increase of Risk", ylab = "", #
            cex.axis = 1.4, cex = 2, names.arg = "Animals")#
        readline("")#
    }
first
last
first<-4000
last<-5000
reps <- (last - first) + 1#
    nf <- layout(matrix(c(1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 4, 4, #
        1, 1, 5, 5, 1, 1, 6, 6), 5, 4, byrow = TRUE), width = c(8, #
        8, 4, 4), height = c(8, 4, 4, 4, 4), respect = TRUE)#
    epicenters <<- epicenters#
    endT <- epicenters#
    endE <- endT + epicenters#
    endRF <- endE + 2 + num_covariates#
    DIS <- matrix(nrow = 994, ncol = epicenters)#
    EXP <- matrix(nrow = 994, ncol = epicenters)#
    maxEXP <- 1:994 * 0#
    Tchain <- matrix(nrow = reps, ncol = epicenters)#
    Echain <- matrix(nrow = reps, ncol = epicenters)#
    for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))#
        }#
        maxEXP <- get_maxEXP(EXP)#
        model_prob <- getprob(maxEXP, B, RF)#
        plot(long, lat, cex = maxEXP)#
        title(main = paste("Chain", u, "     Likelihood = ", #
            signif(L, digits = 3), sep = " "), cex.main = 3, #
            outer = FALSE)#
        points(long[POS == 1], lat[POS == 1], cex = maxEXP[POS == #
            1], col = "red", pch = 21, lwd = 4)#
        for (i in 1:epicenters) {#
            points(ulong[epi[i]], ulat[epi[i]], cex = 9, bg = i + #
                2, pch = 23)#
            text(ulong[epi[i]], ulat[epi[i]], labels = round(IntroT[i]), #
                cex = 1.8)#
        }#
        estimated_cases_by_age <- rep(0, max_age)#
        for (i in 1:max_age) {#
            estimated_cases_by_age[i] <- getageprob(i, i, model_prob)[[1]]#
            pcount[i] <- getageprob(i, i, prob)[[2]]#
        }#
        plot(cases_by_age/count, cex = count/10, ylim = c(0, #
            0.15), col = 1, pch = 21, xlab = "Age", ylab = "Prevalence", #
            cex.axis = 1.4, lwd = 2)#
        points(estimated_cases_by_age/pcount, cex = pcount/10, #
            ylim = c(0, 0.15), col = 4, pch = 21, lwd = 2)#
        INTROT <- unlist(IntroT)#
        barplot(horiz = TRUE, height = INTROT, xlim = c(0, 40), #
            col = (1:epicenters) + 2, xlab = "Time of Introduction", #
            cex.axis = 2, cex = 2, width = widthT[epicenters], #
            ylim = c(0, 4))#
        barplot(horiz = TRUE, height = R, xlim = c(0, 80), col = "orange", #
            xlab = "RATE", cex.axis = 2, cex = 2, names.arg = "  Rate")#
        RFcol <- c(0, 0)#
        ifelse(RF[1] > 0, RFcol[1] <- "black", RFcol[1] <- "red")#
        ifelse(RF[2] > 0, RFcol[2] <- "black", RFcol[2] <- "red")#
        barplot(horiz = TRUE, height = exp(RF[1]), xlim = c(exp(-0.06), #
            exp(0.06)), col = RFcol[1], xlab = "Increase of          Risk", #
            ylab = "", xpd = FALSE, cex.axis = 1.4, cex = 2, #
            names.arg = "    Bug Density")#
        barplot(horiz = TRUE, height = exp(RF[2]), xlim = c(0, #
            3), col = RFcol[2], xlab = "Increase of Risk", ylab = "", #
            cex.axis = 1.4, cex = 2, names.arg = "Animals")#
        readline("")#
    }
MOVIE(chains_data,3,4400,4500)
ch<-chains_data
reps <- (last - first) + 1#
    nf <- layout(matrix(c(1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 4, 4, #
        1, 1, 5, 5, 1, 1, 6, 6), 5, 4, byrow = TRUE), width = c(8, #
        8, 4, 4), height = c(8, 4, 4, 4, 4), respect = TRUE)#
    epicenters <<- epicenters#
    endT <- epicenters#
    endE <- endT + epicenters#
    endRF <- endE + 2 + num_covariates#
    DIS <- matrix(nrow = 994, ncol = epicenters)#
    EXP <- matrix(nrow = 994, ncol = epicenters)#
    maxEXP <- 1:994 * 0#
    Tchain <- matrix(nrow = reps, ncol = epicenters)#
    Echain <- matrix(nrow = reps, ncol = epicenters)#
    for (u in first:last) {#
        R <- ch$Rchain[u]#
        B <- ch$Bchain[u]#
        L <- ch$Lchain[u]#
        IntroT <- ch[u, 1:endT]#
        epi <- ch[u, (endT + 1):endE]#
        RF <- ch[u, (endE + 3):endRF]#
        epi <- unlist(epi)#
        RF <- unlist(RF)#
        IntroT <- unlist(IntroT)#
        for (i in 1:epicenters) {#
            DIS[, i] <- dise(epi[i])#
            EXP[, i] <- (IntroT[i] - (DIS[, i]/R))#
        }#
        maxEXP <- get_maxEXP(EXP)#
        model_prob <- getprob(maxEXP, B, RF)#
        plot(long, lat, cex = maxEXP)#
        title(main = paste("Chain", u, "     Likelihood = ", #
            signif(L, digits = 3), sep = " "), cex.main = 3, #
            outer = FALSE)#
        points(long[POS == 1], lat[POS == 1], cex = maxEXP[POS == #
            1], col = "red", pch = 21, lwd = 4)#
        for (i in 1:epicenters) {#
            points(ulong[epi[i]], ulat[epi[i]], cex = 9, bg = i + #
                2, pch = 23)#
            text(ulong[epi[i]], ulat[epi[i]], labels = round(IntroT[i]), #
                cex = 1.8)#
        }#
        estimated_cases_by_age <- rep(0, max_age)#
        for (i in 1:max_age) {#
            estimated_cases_by_age[i] <- getageprob(i, i, model_prob)[[1]]#
            pcount[i] <- getageprob(i, i, prob)[[2]]#
        }#
        plot(cases_by_age/count, cex = count/10, ylim = c(0, #
            0.15), col = 1, pch = 21, xlab = "Age", ylab = "Prevalence", #
            cex.axis = 1.4, lwd = 2)#
        points(estimated_cases_by_age/pcount, cex = pcount/10, #
            ylim = c(0, 0.15), col = 4, pch = 21, lwd = 2)#
        INTROT <- unlist(IntroT)#
        barplot(horiz = TRUE, height = INTROT, xlim = c(0, 40), #
            col = (1:epicenters) + 2, xlab = "Time of Introduction", #
            cex.axis = 2, cex = 2, width = widthT[epicenters], #
            ylim = c(0, 4))#
        barplot(horiz = TRUE, height = R, xlim = c(0, 80), col = "orange", #
            xlab = "RATE", cex.axis = 2, cex = 2, names.arg = "  Rate")#
        RFcol <- c(0, 0)#
        ifelse(RF[1] > 0, RFcol[1] <- "black", RFcol[1] <- "red")#
        ifelse(RF[2] > 0, RFcol[2] <- "black", RFcol[2] <- "red")#
        barplot(horiz = TRUE, height = exp(RF[1]), xlim = c(exp(-0.06), #
            exp(0.06)), col = RFcol[1], xlab = "Increase of          Risk", #
            ylab = "", xpd = FALSE, cex.axis = 1.4, cex = 2, #
            names.arg = "    Bug Density")#
        barplot(horiz = TRUE, height = exp(RF[2]), xlim = c(0, #
            3), col = RFcol[2], xlab = "Increase of Risk", ylab = "", #
            cex.axis = 1.4, cex = 2, names.arg = "Animals")#
        readline("")#
    }
ls()
epi
MOVIE(chains_data,3,4400,4500)
epi
reps
epicenters
MOVIE(chains_data, 2, 1,100)
MOVIE(chains_data, 3, 1,100)
age
#Reutilizando codigo#
library(RColorBrewer)#
library(leaflet)#
library(data.table)#
source("~/PETM-shiny/shiny/controller/palettes.R")#
#
#===================================================================================#
#	Part I: Draw the map and the path#
#===================================================================================#
#
lat_long_direc<- file.path(homeDir, "PETM-shiny/unicode_numberMzn/AREQUIPA_GPS_GOOGLE")#
latLongFile <- read.csv(file.path(lat_long_direc, "AQP_GPS_GOOGLE_EARTH_PUNTOS_05_jun_2017.csv"))#
latLongFile$UNICODE <- as.character(latLongFile$UNICODE)#
#
drawPaths <- function(activedata, fechaDate, modelResult, section) {#
  #Obteniendo CSV del catchmente-area#
  catchment_area <- read.csv(paste0("~/PETM-shiny/graph_partition/newModelResults/", modelResult, ".csv"), sep = " ")#
  catchment_area <- catchment_area[which(catchment_area$section == section),]#
  catchment_area <- as.data.table(catchment_area)#
  #Creando columna de los colores#
  catchment_area$color <- YlOrRd.q(catchment_area[, probability])#
  #Imprimiendo resultados#
  #write.csv(catchment_area, "~/PETM-shiny/makePaths/color/MODEL_RESULTS_13.88_color.csv")#
  plot(catchment_area[,c('LONGITUDE','LATITUDE')], col=catchment_area$color, xaxt='n', yaxt='n', ann=FALSE, pch = 19, cex = 2, axes=F)#
  # filter for the date#
  activedata <- activedata[which(activedata$FECHA == fechaDate),]#
  # from path date#
  activedata$LATITUDE <- NA#
  activedata$LONGITUDE <- NA#
  # get latitude and longitude#
  for (k in 1:nrow(activedata)) {#
    activedata$UNI_CODE[k] <- gsub("A", "", activedata$UNI_CODE[k])#
    activedata$UNI_CODE[k] <- gsub("B", "", activedata$UNI_CODE[k])#
    activedata$LATITUDE[k] <- latLongFile$LATITUDE[which(latLongFile$UNICODE == activedata$UNI_CODE[k])]#
    activedata$LONGITUDE[k] <- latLongFile$LONGITUDE[which(latLongFile$UNICODE == activedata$UNI_CODE[k])]#
  }#
  # lines#
  for (j in 2:nrow(activedata)) {#
    lines(x=activedata$LONGITUDE[c(j - 1, j)], y=activedata$LATITUDE[c(j - 1, j)], col="black", lwd=2)#
  }#
  # get points#
  for (p in 1:nrow(activedata)) {#
    text(x=activedata$LONGITUDE[p] + 0.00008, y=activedata$LATITUDE[p], p, col="black")#
  }#
}
drawPaths
getwd()
pdf(file=paste("A_CROQUIS",".pdf", sep=""), width=20, height=15)#
drawPaths(ar1, "2017-12-04", "MODEL_RESULTS_13.50_2017-09-14.partitioned", 0)#
drawPaths(ar1, "2017-12-05", "MODEL_RESULTS_13.50_2017-12-13_04_DEC.partitioned", 0)#
drawPaths(ar1, "2017-12-06", "MODEL_RESULTS_13.50_2017-12-13_05_DEC.partitioned", 0)#
drawPaths(ar1, "2017-12-07", "MODEL_RESULTS_13.50_2017-12-15_06_DEC.partitioned", 0)#
drawPaths(ar1, "2017-12-08", "MODEL_RESULTS_13.50_2017-12-15_07_DEC.partitioned", 0)#
dev.off()
drawPaths(gr7, "2017-12-11", "MODEL_RESULTS_13.58_2017-10-03_MODEL_RESULTS_13.59_2017-10-03_MODEL_RESULTS_13.60_2017-10-03.combined", 0)#
d
drawPaths(gr7, "2017-12-12", "MODEL_RESULTS_13.58_2017-12-18_11_DEC_MODEL_RESULTS_13.59_2017-10-03_MODEL_RESULTS_13.60_2017-10-03.combined", 0)#
d
library(RColorBrewer)#
library(leaflet)#
library(data.table)
install.packages('leaflet')
library(RColorBrewer)#
library(leaflet)#
library(data.table)
drawPaths(gr7, "2017-12-11", "MODEL_RESULTS_13.58_2017-10-03_MODEL_RESULTS_13.59_2017-10-03_MODEL_RESULTS_13.60_2017-10-03.combined", 0)
drawpaths
source("~/PETM-shiny/shiny/controller/palettes.R")
install.packages('binr')
source("~/PETM-shiny/shiny/controller/palettes.R")
drawPaths(gr7, "2017-12-11", "MODEL_RESULTS_13.58_2017-10-03_MODEL_RESULTS_13.59_2017-10-03_MODEL_RESULTS_13.60_2017-10-03.combined", 0)
drawPaths(gr7, "2017-12-12", "MODEL_RESULTS_13.58_2017-12-18_11_DEC_MODEL_RESULTS_13.59_2017-10-03_MODEL_RESULTS_13.60_2017-10-03.combined", 0)
999*18
#get percentages like jenni's figures#
library(ggplot2)#
library(ggthemes)#
library(extrafont)#
library(plyr)#
library(scales)#
library(gridExtra)#
library(grid)#
#getting the data #
library(data.table)#
library(reshape)#
library(reshape2)#
library(tidyr)#
######reading data from back app #########
data<-fread("~/PETM-shiny/BackUp_App_Inspections/Back_Up_App_Inspections_08_Feb_2018.csv")#
setnames(data,old = 'UNI_CODE',new = 'UNICODE')#
data$USER_NAME <- toupper(data$USER_NAME)#
data<-data[STATUS_INSPECCION == "inspeccion",STATUS_INSPECCION:="I"]#
data<-data[TEST_DATA==0]#
data<-data[FECHA >='2018-01-15']#
head(data)#
data<-data[PREDICTED_COLOR=="#E31A1C",PREDICTED_COLOR:="#BD0026"]#
table(data$USER_NAME )
dim(data)
table(data$USER_NAME )
data<-data[!USER_NAME=='R8'] #
data<-data[STATUS_INSPECCION == "entrevista",STATUS_INSPECCION:="E"]
dim(data)
# PUTTING NAMES TO INSPECTORS#
data<-data[USER_NAME=="R29"|USER_NAME=="R35",USER_NAME:="D"]#
data<-data[USER_NAME=="R33"|USER_NAME=="R28",USER_NAME:="A"]#
data<-data[USER_NAME=="R36"|USER_NAME=="R32",USER_NAME:="F"]#
data<-data[USER_NAME=="R25"|USER_NAME=="R39",USER_NAME:="C"]#
data<-data[USER_NAME=="R37"|USER_NAME=="R30",USER_NAME:="B"]#
data<-data[USER_NAME=="R31"|USER_NAME=="R26",USER_NAME:="E"]
data<-data[USER_NAME=="R34"|USER_NAME=="R40",USER_NAME:="G"]#
data<-data[USER_NAME=="R27"|USER_NAME=="R38",USER_NAME:="H"]
#GETTING INCENTIVES AND NO INCENTIVES#
data<-data[GROUP_NAME=="RISK_29",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_35",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_28",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_33",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_36",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_32",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_39",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_25",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_37",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_30",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_26",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_31",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_40",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_34",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_27",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_38",GROUP_NAME:="0"]
data$COUNT<-unlist(1)#
data_1<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME, data=data, FUN=sum)
data_1
data_2<-aggregate(COUNT~USER_NAME,data =data_1,FUN = sum)
data_2
data_resumen_semana<-merge(b,data_1,by = "USER_NAME",all = TRUE)
setnames(data_resumen_semana,"COUNT.x","TOTAL_VISITAS")#
setnames(data_resumen_semana,"COUNT.y","VISITAS_RISK_COLOR")#
data_resumen_semana$PERCENTAGE <- (data_resumen_semana$VISITAS_RISK_COLOR / data_resumen_semana$TOTAL_VISITAS) * 100#
options(digits=2)
data_resumen_semana<-merge(b,data_1,by = "USER_NAME",all = TRUE)#
setnames(data_resumen_semana,"COUNT.x","TOTAL_VISITAS")#
setnames(data_resumen_semana,"COUNT.y","VISITAS_RISK_COLOR")#
data_resumen_semana$PERCENTAGE <- (data_resumen_semana$VISITAS_RISK_COLOR / data_resumen_semana$TOTAL_VISITAS) * 100#
options(digits=2)
b
INCENTIVOS<-data[data$GROUP_NAME=='1']#
INCENTIVOS_1<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME, data=INCENTIVOS, FUN=sum)#
INCENTIVOS_2<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME+STATUS_INSPECCION, data=INCENTIVOS, FUN=sum)#
#
CONSOLIDADO<-aggregate(COUNT~USER_NAME,data = INCENTIVOS_1,FUN = sum)#
INC<-merge(CONSOLIDADO,INCENTIVOS_1,by = "USER_NAME",all = TRUE)#
INC$PERCENTAGE<- (INC$COUNT.y / INC$COUNT.x) * 100#
INC$INCENTIVOS<-unlist(1)#
INC_2<-merge(CONSOLIDADO,INCENTIVOS_2,by = "USER_NAME",all = TRUE)#
INC_2$PERCENTAGE<- (INC_2$COUNT.y / INC_2$COUNT.x) * 100#
INC_2$INCENTIVOS<-unlist(1)#
#write.csv(INC,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/INCENTIVOS.csv",row.names = FALSE)
#no incentivos#
NO_INCENTIVOS<-data[data$GROUP_NAME=='0']#
NO_INCENTIVOS_1<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME, data=NO_INCENTIVOS, FUN=sum)#
NO_INCENTIVOS_2<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME+STATUS_INSPECCION, data=NO_INCENTIVOS, FUN=sum)#
#
CONSOLIDADO_NO<-aggregate(COUNT~USER_NAME,data = NO_INCENTIVOS_1,FUN = sum)#
INC_NO<-merge(CONSOLIDADO_NO,NO_INCENTIVOS_1,by = "USER_NAME",all = TRUE)#
INC_NO$PERCENTAGE<- (INC_NO$COUNT.y / INC_NO$COUNT.x) * 100#
INC_NO$INCENTIVOS<-unlist(0)#
INC_NO_2<-merge(CONSOLIDADO,NO_INCENTIVOS_2,by = "USER_NAME",all = TRUE)#
INC_NO_2$PERCENTAGE<- (INC_NO_2$COUNT.y / INC_NO_2$COUNT.x) * 100#
INC_NO_2$INCENTIVOS<-unlist(0)
# gettng the data per risk color,arm and user#
#
DATA_RISK_USER_INCENTIVES<-rbind(INC,INC_NO)#
setDT(DATA_RISK_USER_INCENTIVES)#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#BD0026",PREDICTED_COLOR:="HIGHEST_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#F03B20",PREDICTED_COLOR:="HIGH_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FD8D3C",PREDICTED_COLOR:="MEDIUM_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FECC5C",PREDICTED_COLOR:="LOW_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FFFFB2",PREDICTED_COLOR:="LOWEST_RISK"]#
#write.csv(DATA_RISK_USER_INCENTIVES,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/DATA_USER_INCENTIVES.csv",row.names = FALSE)#
DATA_RISK_USER_INCENTIVES_PERCENT<-rbind(INC_2,INC_NO_2)#
setDT(DATA_RISK_USER_INCENTIVES_PERCENT)#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#BD0026",PREDICTED_COLOR:="HIGHEST_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#F03B20",PREDICTED_COLOR:="HIGH_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FD8D3C",PREDICTED_COLOR:="MEDIUM_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FECC5C",PREDICTED_COLOR:="LOW_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FFFFB2",PREDICTED_COLOR:="LOWEST_RISK"]#
setnames(DATA_RISK_USER_INCENTIVES_PERCENT,'COUNT.x','TOTAL_VISITAS')#
setnames(DATA_RISK_USER_INCENTIVES_PERCENT,'COUNT.y','COUNT')#
#write.csv(DATA_RISK_USER_INCENTIVES_PERCENT,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/DATA_USER_INCENTIVES_PERCENTAGE.csv",row.names = FALSE)#
table(INCENTIVOS$USER_NAME,INCENTIVOS$PREDICTED_COLOR)
table(NO_INCENTIVOS$USER_NAME,NO_INCENTIVOS$PREDICTED_COLOR)#
#    #808080 #BD0026 #F03B20 #FD8D3C #FECC5C #FFFFB2#
# A       0      21      18      10      14      20#
# B       0      52      22      12       2       1#
# C       0      94      25      18       3       0#
# D       0      16       5      19      17       6#
# E       0      38       7      30      17      11#
# F       0      17      57      34      14      28#
# G       0      28      12      21      27      23#
# H       1      49      18       3      11      28#
#
table(INCENTIVOS$USER_NAME,INCENTIVOS$STATUS_INSPECCION)#
    # C   I   R   V#
# A  14  64   0   1#
# B  28  54   5  28#
# C  34  51  23   6#
# D   4 103   0   0#
# E  11  54   5   1#
# F  63  50  26  18#
# G  45  57   4   6#
# H  32  54   9   4#
table(NO_INCENTIVOS$USER_NAME,NO_INCENTIVOS$STATUS_INSPECCION)#
   # C  E  I  R  V#
# A 31  1 50  0  2#
# B 30  0 39  5 15#
# C 46  0 39 40 15#
# D  0  0 63  0  0#
# E 50  5 37  4 12#
# F 62  0 51 23 14#
# G 44  0 49  5 13#
# H 39  0 51 14  6#
#
# getting the data by inspector PER ARM #
#
# INSPECTOR A#
DATA_A_INCENTIVOS<-INCENTIVOS[USER_NAME=='A']#
DATA_A_INCENTIVOS$COUNT<-unlist(1)#
DATA_A_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_A_INCENTIVOS,FUN = sum)#
setDT(DATA_A_1)#
DATA_A_1<-DATA_A_1[order(DATA_A_1$FECHA)]#
DATA_A_1$INCENTIVOS<-unlist(1)#
#
DATA_A_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='A']#
DATA_A_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_A_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_A_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_A_1_NOINCENTIVOS)#
DATA_A_1_NOINCENTIVOS<-DATA_A_1_NOINCENTIVOS[order(DATA_A_1_NOINCENTIVOS$FECHA)]#
DATA_A_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_A<-rbind(DATA_A_1,DATA_A_1_NOINCENTIVOS)#
DATOS_TOTALES_A<-aggregate(COUNT~FECHA,data = DATOS_A,FUN = sum)#
#
A_CONSOLIDADO<-merge(DATOS_A,DATOS_TOTALES_A,by = "FECHA",all = TRUE)#
A_CONSOLIDADO$PERCENTAGE <- (A_CONSOLIDADO$COUNT.x / A_CONSOLIDADO$COUNT.y) * 100#
#write.csv(A_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_A_POR_DIA.csv",row.names = FALSE)
# INSPECTOR B#
DATA_B_INCENTIVOS<-INCENTIVOS[USER_NAME=='B']#
DATA_B_INCENTIVOS$COUNT<-unlist(1)#
DATA_B_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_B_INCENTIVOS,FUN = sum)#
setDT(DATA_B_1)#
DATA_B_1<-DATA_B_1[order(DATA_B_1$FECHA)]#
DATA_B_1$INCENTIVOS<-unlist(1)#
#
DATA_B_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='B']#
DATA_B_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_B_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_B_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_B_1_NOINCENTIVOS)#
DATA_B_1_NOINCENTIVOS<-DATA_B_1_NOINCENTIVOS[order(DATA_B_1_NOINCENTIVOS$FECHA)]#
DATA_B_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_B<-rbind(DATA_B_1,DATA_B_1_NOINCENTIVOS)#
DATOS_TOTALES_B<-aggregate(COUNT~FECHA,data = DATOS_B,FUN = sum)#
#
B_CONSOLIDADO<-merge(DATOS_B,DATOS_TOTALES_B,by = "FECHA",all = TRUE)#
B_CONSOLIDADO$PERCENTAGE <- (B_CONSOLIDADO$COUNT.x / B_CONSOLIDADO$COUNT.y) * 100#
#write.csv(B_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_B_POR_DIA.csv",row.names = FALSE)#
#
# INSPECTOR C#
DATA_C_INCENTIVOS<-INCENTIVOS[USER_NAME=='C']#
DATA_C_INCENTIVOS$COUNT<-unlist(1)#
DATA_C_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_C_INCENTIVOS,FUN = sum)#
setDT(DATA_C_1)#
DATA_C_1<-DATA_C_1[order(DATA_C_1$FECHA)]#
DATA_C_1$INCENTIVOS<-unlist(1)#
#
DATA_C_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='C']#
DATA_C_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_C_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_C_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_C_1_NOINCENTIVOS)#
DATA_C_1_NOINCENTIVOS<-DATA_C_1_NOINCENTIVOS[order(DATA_C_1_NOINCENTIVOS$FECHA)]#
DATA_C_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_C<-rbind(DATA_C_1,DATA_C_1_NOINCENTIVOS)#
DATOS_TOTALES_C<-aggregate(COUNT~FECHA,data = DATOS_C,FUN = sum)#
#
C_CONSOLIDADO<-merge(DATOS_C,DATOS_TOTALES_C,by = "FECHA",all = TRUE)#
C_CONSOLIDADO$PERCENTAGE <- (C_CONSOLIDADO$COUNT.x / C_CONSOLIDADO$COUNT.y) * 100#
#write.csv(C_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_C_POR_DIA.csv",row.names = FALSE)#
# INSPECTOR D#
DATA_D_INCENTIVOS<-INCENTIVOS[USER_NAME=='D']#
DATA_D_INCENTIVOS$COUNT<-unlist(1)#
DATA_D_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_D_INCENTIVOS,FUN = sum)#
setDT(DATA_D_1)#
DATA_D_1<-DATA_D_1[order(DATA_D_1$FECHA)]#
DATA_D_1$INCENTIVOS<-unlist(1)#
#
DATA_D_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='D']#
DATA_D_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_D_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_D_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_D_1_NOINCENTIVOS)#
DATA_D_1_NOINCENTIVOS<-DATA_D_1_NOINCENTIVOS[order(DATA_D_1_NOINCENTIVOS$FECHA)]#
DATA_D_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_D<-rbind(DATA_D_1,DATA_D_1_NOINCENTIVOS)#
DATOS_TOTALES_D<-aggregate(COUNT~FECHA,data = DATOS_D,FUN = sum)#
#
D_CONSOLIDADO<-merge(DATOS_D,DATOS_TOTALES_D,by = "FECHA",all = TRUE)#
D_CONSOLIDADO$PERCENTAGE <- (D_CONSOLIDADO$COUNT.x / D_CONSOLIDADO$COUNT.y) * 100#
#write.csv(D_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_D_POR_DIA.csv",row.names = FALSE)#
# INSPECTOR E#
DATA_E_INCENTIVOS<-INCENTIVOS[USER_NAME=='E']#
DATA_E_INCENTIVOS$COUNT<-unlist(1)#
DATA_E_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_E_INCENTIVOS,FUN = sum)#
setDT(DATA_E_1)#
DATA_E_1<-DATA_E_1[order(DATA_E_1$FECHA)]#
DATA_E_1$INCENTIVOS<-unlist(1)#
#
DATA_E_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='E']#
DATA_E_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_E_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_E_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_E_1_NOINCENTIVOS)#
DATA_E_1_NOINCENTIVOS<-DATA_E_1_NOINCENTIVOS[order(DATA_E_1_NOINCENTIVOS$FECHA)]#
DATA_E_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_E<-rbind(DATA_E_1,DATA_E_1_NOINCENTIVOS)#
DATOS_TOTALES_E<-aggregate(COUNT~FECHA,data = DATOS_E,FUN = sum)#
#
E_CONSOLIDADO<-merge(DATOS_E,DATOS_TOTALES_E,by = "FECHA",all = TRUE)#
E_CONSOLIDADO$PERCENTAGE <- (E_CONSOLIDADO$COUNT.x / E_CONSOLIDADO$COUNT.y) * 100#
#write.csv(E_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_E_POR_DIA.csv",row.names = FALSE)#
#
# INSPECTOR F#
DATA_F_INCENTIVOS<-INCENTIVOS[USER_NAME=='F']#
DATA_F_INCENTIVOS$COUNT<-unlist(1)#
DATA_F_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_F_INCENTIVOS,FUN = sum)#
setDT(DATA_F_1)#
DATA_F_1<-DATA_F_1[order(DATA_F_1$FECHA)]#
DATA_F_1$INCENTIVOS<-unlist(1)#
#
DATA_F_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='F']#
DATA_F_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_F_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_F_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_F_1_NOINCENTIVOS)#
DATA_F_1_NOINCENTIVOS<-DATA_F_1_NOINCENTIVOS[order(DATA_F_1_NOINCENTIVOS$FECHA)]#
DATA_F_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_F<-rbind(DATA_F_1,DATA_F_1_NOINCENTIVOS)#
DATOS_TOTALES_F<-aggregate(COUNT~FECHA,data = DATOS_F,FUN = sum)#
#
F_CONSOLIDADO<-merge(DATOS_F,DATOS_TOTALES_F,by = "FECHA",all = TRUE)#
F_CONSOLIDADO$PERCENTAGE <- (F_CONSOLIDADO$COUNT.x / F_CONSOLIDADO$COUNT.y) * 100#
#write.csv(F_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_F_POR_DIA.csv",row.names = FALSE)#
#
# INSPECTOR G#
DATA_G_INCENTIVOS<-INCENTIVOS[USER_NAME=='G']#
DATA_G_INCENTIVOS$COUNT<-unlist(1)#
DATA_G_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_G_INCENTIVOS,FUN = sum)#
setDT(DATA_G_1)#
DATA_G_1<-DATA_G_1[order(DATA_G_1$FECHA)]#
DATA_G_1$INCENTIVOS<-unlist(1)#
#
DATA_G_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='G']#
DATA_G_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_G_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_G_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_G_1_NOINCENTIVOS)#
DATA_G_1_NOINCENTIVOS<-DATA_G_1_NOINCENTIVOS[order(DATA_G_1_NOINCENTIVOS$FECHA)]#
DATA_G_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_G<-rbind(DATA_G_1,DATA_G_1_NOINCENTIVOS)#
DATOS_TOTALES_G<-aggregate(COUNT~FECHA,data = DATOS_G,FUN = sum)#
#
G_CONSOLIDADO<-merge(DATOS_G,DATOS_TOTALES_G,by = "FECHA",all = TRUE)#
G_CONSOLIDADO$PERCENTAGE <- (G_CONSOLIDADO$COUNT.x / G_CONSOLIDADO$COUNT.y) * 100#
#write.csv(G_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_G_POR_DIA.csv",row.names = FALSE)#
#
# INSPECTOR H#
DATA_H_INCENTIVOS<-INCENTIVOS[USER_NAME=='H']#
DATA_H_INCENTIVOS$COUNT<-unlist(1)#
DATA_H_1<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_H_INCENTIVOS,FUN = sum)#
setDT(DATA_H_1)#
DATA_H_1<-DATA_H_1[order(DATA_H_1$FECHA)]#
DATA_H_1$INCENTIVOS<-unlist(1)#
#
DATA_H_NO_INCENTIVOS<-NO_INCENTIVOS[USER_NAME=='H']#
DATA_H_NO_INCENTIVOS$COUNT<-unlist(1)#
DATA_H_1_NOINCENTIVOS<-aggregate(COUNT~FECHA+PREDICTED_COLOR+STATUS_INSPECCION,data = DATA_H_NO_INCENTIVOS,FUN = sum)#
setDT(DATA_H_1_NOINCENTIVOS)#
DATA_H_1_NOINCENTIVOS<-DATA_H_1_NOINCENTIVOS[order(DATA_H_1_NOINCENTIVOS$FECHA)]#
DATA_H_1_NOINCENTIVOS$INCENTIVOS<-unlist(0)#
#
DATOS_H<-rbind(DATA_H_1,DATA_H_1_NOINCENTIVOS)#
DATOS_TOTALES_H<-aggregate(COUNT~FECHA,data = DATOS_H,FUN = sum)#
#
H_CONSOLIDADO<-merge(DATOS_H,DATOS_TOTALES_H,by = "FECHA",all = TRUE)#
H_CONSOLIDADO$PERCENTAGE <- (H_CONSOLIDADO$COUNT.x / H_CONSOLIDADO$COUNT.y) * 100#
#write.csv(H_CONSOLIDADO,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/CONSOLIDADO_H_POR_DIA.csv",row.names = FALSE)
####### NUMBER OF THE UNINSPECTED HOUSES IN THE BIOGGEST TRIANGLE AT THE END OF THE WEEK ##############
dat<-matrix(c('A',28,62,0,16,61,1,'B',32,48,0,30,69,1,'C',45,59,0,24,55,1,#
                                 'D',8,43,0,7,52,1,'E',25,72,0,18,57,1,'F',28,47,0,27,51,1,#
                                 'G',33,45,0,23,55,1,'H',23,55,0,21,46,1),ncol = 7,byrow = TRUE)
dat
colnames(NON_INSPECTED_TRIANGLE)<-c('USER_NAME','HOUSES_BIGGEST_TRIANGLE_NOINCENTIVES','%TEN_PERCENT','INCENTIVOS','HOUSES_BIGGEST_TRIANGLE_INCENTIVES','%TEN_PERCENT','INCENTIVOS')#
#write.csv(NON_INSPECTED_TRIANGLE,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/HOUSES_BIGGEST_TRIANGLE.csv",row.names = FALSE)#
NON_INSPECTED_TRIANGLE<-as.data.table(NON_INSPECTED_TRIANGLE)#
#
difference<-NON_INSPECTED_TRIANGLE$HOUSES_BIGGEST_TRIANGLE_INCENTIVES-NON_INSPECTED_TRIANGLE$HOUSES_BIGGEST_TRIANGLE_NOINCENTIVES#
hist(difference,   #
     col="blue", #
     main="Histogram of differences",#
     xlab="difference")
####### NUMBER OF THE UNINSPECTED HOUSES IN THE BIOGGEST TRIANGLE AT THE END OF THE WEEK ##############
dat<-matrix(c('A',28,62,0,16,61,1,'B',32,48,0,30,69,1,'C',45,59,0,24,55,1,#
                                 'D',8,43,0,7,52,1,'E',25,72,0,18,57,1,'F',28,47,0,27,51,1,#
                                 'G',33,45,0,23,55,1,'H',23,55,0,21,46,1),ncol = 7,byrow = TRUE)
dat
colnames(NON_INSPECTED_TRIANGLE)<-c('USER_NAME','HOUSES_BIGGEST_TRIANGLE_NOINCENTIVES','%TEN_PERCENT','INCENTIVOS','HOUSES_BIGGEST_TRIANGLE_INCENTIVES','%TEN_PERCENT','INCENTIVOS')
NON_INSPECTED_TRIANGLE<-as.data.table(NON_INSPECTED_TRIANGLE)
dat
as.matrix(dat)
choose(20,10)
choose(40,10)
222*26
#==============Getting descriptives for Paucarapata II==================#
#=======================================================================#
library(ggplot2)#
library(ggthemes)#
library(extrafont)#
library(plyr)#
library(scales)#
library(gridExtra)#
library(grid)#
library(data.table)#
library(reshape)#
library(reshape2)#
library(tidyr)#
#
#====================Reading data from back app ========================#
data<-fread("~/PETM-shiny/BackUp_App_Inspections/Back_Up_App_Inspections_08_Feb_2018.csv")#
setnames(data,old = 'UNI_CODE',new = 'UNICODE')#
data$USER_NAME <- toupper(data$USER_NAME)#
data<-data[STATUS_INSPECCION == "inspeccion",STATUS_INSPECCION:="I"]#
data<-data[STATUS_INSPECCION == "entrevista",STATUS_INSPECCION:="E"]#
data<-data[TEST_DATA==0]#
data<-data[FECHA >='2018-01-15']#
head(data,3)#
####Changing weird Color for the color  predicted from the APP####
data<-data[PREDICTED_COLOR=="#E31A1C",PREDICTED_COLOR:="#BD0026"]#
#
#===================Cleaning data for User names========================#
#
table(data$USER_NAME )#
# R25 R26 R27 R28 R29 R30 R31 R32 R33 R34 R35 R36 R37 R38 R39 R40  R8 #
# 141  71  99  79 107  89 108 150  84 111  63 157 115 110 114 112  10 #
data<-data[!USER_NAME=='R8'] #
#=============Changing the Users for inspectors letters=====================#
#
data<-data[USER_NAME=="R29"|USER_NAME=="R35",USER_NAME:="D"]#
data<-data[USER_NAME=="R33"|USER_NAME=="R28",USER_NAME:="A"]#
data<-data[USER_NAME=="R36"|USER_NAME=="R32",USER_NAME:="F"]#
data<-data[USER_NAME=="R25"|USER_NAME=="R39",USER_NAME:="C"]#
data<-data[USER_NAME=="R37"|USER_NAME=="R30",USER_NAME:="B"]#
data<-data[USER_NAME=="R31"|USER_NAME=="R26",USER_NAME:="E"]#
data<-data[USER_NAME=="R34"|USER_NAME=="R40",USER_NAME:="G"]#
data<-data[USER_NAME=="R27"|USER_NAME=="R38",USER_NAME:="H"]#
#
#========Changing risk group for arms (incentives and no incentives)========== #
#
data<-data[GROUP_NAME=="RISK_29",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_35",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_28",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_33",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_36",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_32",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_39",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_25",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_37",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_30",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_26",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_31",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_40",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_34",GROUP_NAME:="0"]#
data<-data[GROUP_NAME=="RISK_27",GROUP_NAME:="1"]#
data<-data[GROUP_NAME=="RISK_38",GROUP_NAME:="0"]#
#
setnames(data,'GROUP_NAME','INCENTIVES')#
####Creating a column to get Quantity======================================= #
data$COUNT<-unlist(1)#
#
#==============aggregating by predicted color and user name=================================#
#======(predicted_color is the color that people saw in the app in field)===================#
#=====to get number of the different risk color houses that they choose in field============#
data_1<-aggregate(COUNT ~ PREDICTED_COLOR+USER_NAME+STATUS_INSPECCION+INCENTIVES, data=data, FUN=sum)#
#
#=======total_visits aggregate by USER_NAME to get the number of visited houses==== #
total_visits<-aggregate(COUNT~USER_NAME,data =data_1,FUN = sum)
data_1<-merge(total_visits,data_1,by = "USER_NAME",all = TRUE)#
setnames(data_1,"COUNT.x","TOTAL_VISITAS")#
setnames(data_1,"COUNT.y","VISITAS_RISK_COLOR")#
data_1$PERCENTAGE <- (data_1$VISITAS_RISK_COLOR / data_1$TOTAL_VISITAS) * 100#
options(digits=2)#
#
# '#808080' this color  was observed at the beggining of the expriment in some houses,#
# some of them because they were additioned by us ,and some others because we had troubles#
# in the model with NA for non-sprayed variable.#
#
#==========number of houses by inspector and status inspeccion================#
data_2<-aggregate(COUNT~USER_NAME+STATUS_INSPECCION,data = data,FUN = sum)#
#write.csv(data_2,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/STATUS_VS_USERNAME.csv",row.names = FALSE)#
#=================#
# gettng the data per risk color,arm and user#
#
DATA_RISK_USER_INCENTIVES<-rbind(INC,INC_NO)#
setDT(DATA_RISK_USER_INCENTIVES)#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#BD0026",PREDICTED_COLOR:="HIGHEST_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#F03B20",PREDICTED_COLOR:="HIGH_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FD8D3C",PREDICTED_COLOR:="MEDIUM_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FECC5C",PREDICTED_COLOR:="LOW_RISK"]#
DATA_RISK_USER_INCENTIVES<-DATA_RISK_USER_INCENTIVES[PREDICTED_COLOR=="#FFFFB2",PREDICTED_COLOR:="LOWEST_RISK"]#
#write.csv(DATA_RISK_USER_INCENTIVES,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/DATA_USER_INCENTIVES.csv",row.names = FALSE)
DATA_RISK_USER_INCENTIVES_PERCENT<-rbind(INC_2,INC_NO_2)#
setDT(DATA_RISK_USER_INCENTIVES_PERCENT)#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#BD0026",PREDICTED_COLOR:="HIGHEST_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#F03B20",PREDICTED_COLOR:="HIGH_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FD8D3C",PREDICTED_COLOR:="MEDIUM_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FECC5C",PREDICTED_COLOR:="LOW_RISK"]#
DATA_RISK_USER_INCENTIVES_PERCENT<-DATA_RISK_USER_INCENTIVES_PERCENT[PREDICTED_COLOR=="#FFFFB2",PREDICTED_COLOR:="LOWEST_RISK"]#
setnames(DATA_RISK_USER_INCENTIVES_PERCENT,'COUNT.x','TOTAL_VISITAS')#
setnames(DATA_RISK_USER_INCENTIVES_PERCENT,'COUNT.y','COUNT')#
#write.csv(DATA_RISK_USER_INCENTIVES_PERCENT,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/DATA_USER_INCENTIVES_PERCENTAGE.csv",row.names = FALSE)
table(INCENTIVOS$USER_NAME,INCENTIVOS$PREDICTED_COLOR)#
#    #808080 #BD0026 #F03B20 #FD8D3C #FECC5C #FFFFB2#
# A       0      18      29      12       8      12#
# B       0      66      16      17       9       7#
# C       0      37      42      12      15       8#
# D       6      23      31      24      17       6#
# E       2      13      12      12      15      17#
# F       0      49      47      26      15      20#
# G       3      40      31      13      22       3#
# H       0      31      29      15      16       8#
table(NO_INCENTIVOS$USER_NAME,NO_INCENTIVOS$PREDICTED_COLOR)#
#    #808080 #BD0026 #F03B20 #FD8D3C #FECC5C #FFFFB2#
# A       0      21      18      10      14      20#
# B       0      52      22      12       2       1#
# C       0      94      25      18       3       0#
# D       0      16       5      19      17       6#
# E       0      38       7      30      17      11#
# F       0      17      57      34      14      28#
# G       0      28      12      21      27      23#
# H       1      49      18       3      11      28#
#
table(INCENTIVOS$USER_NAME,INCENTIVOS$STATUS_INSPECCION)#
    # C   I   R   V#
# A  14  64   0   1#
# B  28  54   5  28#
# C  34  51  23   6#
# D   4 103   0   0#
# E  11  54   5   1#
# F  63  50  26  18#
# G  45  57   4   6#
# H  32  54   9   4#
table(NO_INCENTIVOS$USER_NAME,NO_INCENTIVOS$STATUS_INSPECCION)#
   # C  E  I  R  V#
# A 31  1 50  0  2#
# B 30  0 39  5 15#
# C 46  0 39 40 15#
# D  0  0 63  0  0#
# E 50  5 37  4 12#
# F 62  0 51 23 14#
# G 44  0 49  5 13#
# H 39  0 51 14  6#
#
# getting the data by inspector PER ARM
dat<-matrix(c('A',28,62,0,16,61,1,'B',32,48,0,30,69,1,'C',45,59,0,24,55,1,#
                                 'D',8,43,0,7,52,1,'E',25,72,0,18,57,1,'F',28,47,0,27,51,1,#
                                 'G',33,45,0,23,55,1,'H',23,55,0,21,46,1),ncol = 7,byrow = TRUE)#
colnames(dat)<-c('USER_NAME','HOUSES_BIGGEST_TRIANGLE_NOINCENTIVES','%TEN_PERCENT','INCENTIVOS','HOUSES_BIGGEST_TRIANGLE_INCENTIVES','%TEN_PERCENT','INCENTIVOS')#
#write.csv(NON_INSPECTED_TRIANGLE,"~/PETM-shiny/VectorPoint_Experiment_1_PAUCARPATA/RESULTS/HOUSES_BIGGEST_TRIANGLE.csv",row.names = FALSE)#
dat<-as.data.table(dat)
difference<-NON_INSPECTED_TRIANGLE$HOUSES_BIGGEST_TRIANGLE_INCENTIVES-NON_INSPECTED_TRIANGLE$HOUSES_BIGGEST_TRIANGLE_NOINCENTIVES
head(dat)
hist(difference,   #
     col="blue", #
     main="Histogram of differences",#
     xlab="difference")#
######barplots levels of risk by isnpector by week in the two arms#########
##########################################################################
#
sum()#
# [1] 1709#
# 854 VISITS IN  INCENTIVES ARM#
# 856 VISITS IN  NO INCENTIVES ARM #
sum(data$INCENTIVOS)#
ggplot(data=, aes(x=PREDICTED_COLOR, y=PERCENTAGE,fill=PREDICTED_COLOR)) +#
  geom_bar(stat="identity")
500^2*pi
500^2*pi/1000
300^2*pi/1000
.500^2*pi
500^2*pi
500^2*pi->d
d/1000
1/15
.066*5
.08*5
29253/60
29253/60/60
prior <- log(4.85) * (1+1) + log(.82) * (1+1) * nYears
nYears<-1:20
prior <- log(4.85) * (1+1) + log(.82) * (1+1) * nYears
prior
prior <- argmax(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior <- ArgMax(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior
prior <- arg.max(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior <- arg.max(log(4.85) * (1+1) + log(.82) * (1+1) * 10, 0)
prior <- argmax(log(4.85) * (1+1) + log(.82) * (1+1) * 10, 0)
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * 10, 0)
prior
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * 5, 0)
prior
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
nYears
prior
nYears<-10
prior
nYears
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior
nYears<-5
prior <- max(log(4.85) * (1+1) + log(.82) * (1+1) * nYears, 0)
prior
log(4.85) * (1+1) + log(.82) * (1+1) * nYears
nYears<-1:10
log(4.85) * (1+1) + log(.82) * (1+1) * nYears
library(readxl)#
library(pgirmess)#
#
file1 = file.choose() #file name: dataForSubmission_040318_USE.xlsx#
#this file has multiple tabs. Make sure the tab indicated in the code is the sheet indicated in 'tab name'#
#
#Corresponding Figures data and code:#
#All visits figure data: "visit outcome all visits 5 stacks bar graph 040418"' #
#Figure code: 'visit outcome 5 stacks bar graph 040418'
#ALL VISITS (to houses of every risk level) BY OUTCOME  inspection other; 2x2 table; tab name: ' inspection other all'- #
dat1 <- read_excel(file1,1) #tab name: 'inspection other all'#
View(dat1)#
ct1 <- xtabs(visits ~ arm + result +inspector, data=dat1)#
ftable(ct1)#
#
#mantelhaen.test(ct2a, exact= TRUE)#
mantelhaen.test(ct1)
library(readxl)#
library(pgirmess)
install.packages('readxl')
install.packages('pgirmess')
dat1 <- read_excel(file1,1) #tab name: 'inspection other all'#
View(dat1)#
ct1 <- xtabs(visits ~ arm + result +inspector, data=dat1)#
ftable(ct1)
library(readxl)#
library(pgirmess)#
#
file1 = file.choose() #file name: dataForSubmission_040318_USE.xlsx#
#this file has multiple tabs. Make sure the tab indicated in the code is the sheet indicated in 'tab name'
file1
#ALL VISITS (to houses of every risk level) BY OUTCOME  inspection other; 2x2 table; tab name: ' inspection other all'- #
dat1 <- read_excel(file1,1) #tab name: 'inspection other all'#
View(dat1)#
ct1 <- xtabs(visits ~ arm + result +inspector, data=dat1)#
ftable(ct1)
head(dat1)
dat1 <- read_excel(file1,1) #tab name: 'inspection other all'#
View(dat1)#
ct1 <- xtabs(visits ~ arm + result +inspector, data=dat1)#
ftable(ct1)
glmer(Z~app+(1|id), family=binomial, data=data))
ls()
glmer(Z~app+(1|id), family=binomial, data=dat1))
names(dat1)
kmeans(x, centers, iter.max = 10, nstart = 1,#
       algorithm = c("Hartigan-Wong", "Lloyd", "Forgy",#
                     "MacQueen"), trace=FALSE)#
# S3 method for kmeans#
fitted(object, method = c("centers", "classes"), ...)
######
# data columbus#
require("maptools")#
example(columbus)#
#
# a basic example using the kmeans method#
clustermap(columbus, c("HOVAL","INC","CRIME","OPEN","PLUMB","DISCBD"), 3,#
criteria=(columbus@data$CP==1), identify=TRUE, cex.lab=0.7)
install.package('maptools')
install.packages('maptools')
######
# data columbus#
require("maptools")#
example(columbus)#
#
# a basic example using the kmeans method#
clustermap(columbus, c("HOVAL","INC","CRIME","OPEN","PLUMB","DISCBD"), 3,#
criteria=(columbus@data$CP==1), identify=TRUE, cex.lab=0.7)
N<-48   #60 cathements#
years<-4 #
#
arm<-c(rep(1,N*years/2), rep(0,N*years/2))#
#
temp<-rep(1,N/2)#
for(i in 2:years)#
	{#
	temp<-c(temp,rep(i,N/2))	#
	}#
year<-c(temp,temp)	#
pL<-.5#
pM<-.4#
pH<-.3#
SIZE<-.3#
#
muL <-1#
muH <- 3#
getout<-function(N,P)#
	{#
	H<-rnbinom(n=N,size=SIZE,prob=P) #
	return(H)#
	}#
#
getoutMU<-function(N,MU)#
	{#
	H<-rnbinom(n=N,size=SIZE,mu = MU) #
	return(H)#
	}#
reps<-1000#
rm(RESULTS)#
for(o in 1:reps)#
	{	#
#
#HHLLLLHH#
#out<-c(getout(N/2,pH), getout(N/2,pH), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pH), getout(N/2,pH))#
#
#HMMLMMH#
#out<-c(getout(N/2,pH), getout(N/2,pM), getout(N/2,pM), getout(N/2,pL), getout(N/2,pL), getout(N/2,pM), getout(N/2,pM), getout(N/2,pH))#
#
#MU HHLLLLHH#
out<-c(getoutMU(N/2,muH), getoutMU(N/2,muH), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muH), getoutMU(N/2,muH))#
GLMnb<-glm.nb(out~arm+year+arm*year)#
#
ests<-summary(GLMnb)[[11]][,1]#
pvalues<-summary(GLMnb)[[11]][,4]#
results<-c(ests,pvalues)#
if(o==1) RESULTS<-results#
if(o>1)RESULTS<-rbind(RESULTS,results)#
#
}#
R2<-data.frame(RESULTS)#
POWER_arm<-sum(R2$arm.1<=.05)/reps#
POWER_armyear<-sum(R2$arm.year.1<=.05)/reps#
POWER_both<-sum(R2$arm.1<=.05 & R2$arm.year.1<=.05) / reps#
#
print(paste("Size:", SIZE, "High mu", muH, "Low mu", muL, sep=" "))#
print(paste("Power arm:", POWER_arm, sep=" "))#
print(paste("Power armyear:", POWER_armyear, sep=" "))#
print(paste("Power both", POWER_both, sep=" "))#
#
#how many zeros#
sum(getoutMU(10000,muL)==0)#
sum(getoutMU(10000,muH)==0)#
#
#visualize#
plot(year,fitted.values(GLMnb),col=arm+1)#
plot(year,unique(fitted.values(GLMnb)),col=arm+1)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="p", ylim=c(0,6))#
points(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="p", col=3)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="l", ylim=c(0,6))#
lines(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="l", col="green")
library(MASS)
N<-48   #60 cathements#
years<-4 #
#
arm<-c(rep(1,N*years/2), rep(0,N*years/2))#
#
temp<-rep(1,N/2)#
for(i in 2:years)#
	{#
	temp<-c(temp,rep(i,N/2))	#
	}#
year<-c(temp,temp)	#
pL<-.5#
pM<-.4#
pH<-.3#
SIZE<-.3#
#
muL <-1#
muH <- 3#
getout<-function(N,P)#
	{#
	H<-rnbinom(n=N,size=SIZE,prob=P) #
	return(H)#
	}#
#
getoutMU<-function(N,MU)#
	{#
	H<-rnbinom(n=N,size=SIZE,mu = MU) #
	return(H)#
	}#
reps<-1000#
rm(RESULTS)#
for(o in 1:reps)#
	{	#
#
#HHLLLLHH#
#out<-c(getout(N/2,pH), getout(N/2,pH), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pH), getout(N/2,pH))#
#
#HMMLMMH#
#out<-c(getout(N/2,pH), getout(N/2,pM), getout(N/2,pM), getout(N/2,pL), getout(N/2,pL), getout(N/2,pM), getout(N/2,pM), getout(N/2,pH))#
#
#MU HHLLLLHH#
out<-c(getoutMU(N/2,muH), getoutMU(N/2,muH), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muH), getoutMU(N/2,muH))#
GLMnb<-glm.nb(out~arm+year+arm*year)#
#
ests<-summary(GLMnb)[[11]][,1]#
pvalues<-summary(GLMnb)[[11]][,4]#
results<-c(ests,pvalues)#
if(o==1) RESULTS<-results#
if(o>1)RESULTS<-rbind(RESULTS,results)#
#
}#
R2<-data.frame(RESULTS)#
POWER_arm<-sum(R2$arm.1<=.05)/reps#
POWER_armyear<-sum(R2$arm.year.1<=.05)/reps#
POWER_both<-sum(R2$arm.1<=.05 & R2$arm.year.1<=.05) / reps#
#
print(paste("Size:", SIZE, "High mu", muH, "Low mu", muL, sep=" "))#
print(paste("Power arm:", POWER_arm, sep=" "))#
print(paste("Power armyear:", POWER_armyear, sep=" "))#
print(paste("Power both", POWER_both, sep=" "))#
#
#how many zeros#
sum(getoutMU(10000,muL)==0)#
sum(getoutMU(10000,muH)==0)#
#
#visualize#
plot(year,fitted.values(GLMnb),col=arm+1)#
plot(year,unique(fitted.values(GLMnb)),col=arm+1)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="p", ylim=c(0,6))#
points(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="p", col=3)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="l", ylim=c(0,6))#
lines(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="l", col="green")
out
plot(year,fitted.values(GLMnb),col=arm+1)
plot.new()
plot(1:10)
plot(year,fitted.values(GLMnb),col=arm+1)
plot(year,unique(fitted.values(GLMnb)),col=arm+1)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="p", ylim=c(0,6))#
points(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="p", col=3)#
plot(unique(year),unique(fitted.values(GLMnb)[arm==1]), type="l", ylim=c(0,6))#
lines(unique(year),unique(fitted.values(GLMnb)[arm==0]), type="l", col="green")
print(paste("Size:", SIZE, "High mu", muH, "Low mu", muL, sep=" "))#
print(paste("Power arm:", POWER_arm, sep=" "))#
print(paste("Power armyear:", POWER_armyear, sep=" "))#
print(paste("Power both", POWER_both, sep=" "))
out
summary(out)
SIZE
P
muH
muL
SIZE<-.1
muL <-1#
muH <- 3#
getout<-function(N,P)#
	{#
	H<-rnbinom(n=N,size=SIZE,prob=P) #
	return(H)#
	}#
#
getoutMU<-function(N,MU)#
	{#
	H<-rnbinom(n=N,size=SIZE,mu = MU) #
	return(H)#
	}#
reps<-1000#
rm(RESULTS)#
for(o in 1:reps)#
	{	#
#
#HHLLLLHH#
#out<-c(getout(N/2,pH), getout(N/2,pH), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pH), getout(N/2,pH))#
#
#HMMLMMH#
#out<-c(getout(N/2,pH), getout(N/2,pM), getout(N/2,pM), getout(N/2,pL), getout(N/2,pL), getout(N/2,pM), getout(N/2,pM), getout(N/2,pH))#
#
#MU HHLLLLHH#
out<-c(getoutMU(N/2,muH), getoutMU(N/2,muH), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muH), getoutMU(N/2,muH))#
GLMnb<-glm.nb(out~arm+year+arm*year)#
#
ests<-summary(GLMnb)[[11]][,1]#
pvalues<-summary(GLMnb)[[11]][,4]#
results<-c(ests,pvalues)#
if(o==1) RESULTS<-results#
if(o>1)RESULTS<-rbind(RESULTS,results)#
#
}#
R2<-data.frame(RESULTS)#
POWER_arm<-sum(R2$arm.1<=.05)/reps#
POWER_armyear<-sum(R2$arm.year.1<=.05)/reps#
POWER_both<-sum(R2$arm.1<=.05 & R2$arm.year.1<=.05) / reps#
#
print(paste("Size:", SIZE, "High mu", muH, "Low mu", muL, sep=" "))#
print(paste("Power arm:", POWER_arm, sep=" "))#
print(paste("Power armyear:", POWER_armyear, sep=" "))#
print(paste("Power both", POWER_both, sep=" "))
OUT
out
SIZE<-.5#
#
muL <-1#
muH <- 3#
getout<-function(N,P)#
	{#
	H<-rnbinom(n=N,size=SIZE,prob=P) #
	return(H)#
	}#
#
getoutMU<-function(N,MU)#
	{#
	H<-rnbinom(n=N,size=SIZE,mu = MU) #
	return(H)#
	}#
reps<-1000#
rm(RESULTS)#
for(o in 1:reps)#
	{	#
#
#HHLLLLHH#
#out<-c(getout(N/2,pH), getout(N/2,pH), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pL), getout(N/2,pH), getout(N/2,pH))#
#
#HMMLMMH#
#out<-c(getout(N/2,pH), getout(N/2,pM), getout(N/2,pM), getout(N/2,pL), getout(N/2,pL), getout(N/2,pM), getout(N/2,pM), getout(N/2,pH))#
#
#MU HHLLLLHH#
out<-c(getoutMU(N/2,muH), getoutMU(N/2,muH), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muL), getoutMU(N/2,muH), getoutMU(N/2,muH))#
GLMnb<-glm.nb(out~arm+year+arm*year)#
#
ests<-summary(GLMnb)[[11]][,1]#
pvalues<-summary(GLMnb)[[11]][,4]#
results<-c(ests,pvalues)#
if(o==1) RESULTS<-results#
if(o>1)RESULTS<-rbind(RESULTS,results)#
#
}#
R2<-data.frame(RESULTS)#
POWER_arm<-sum(R2$arm.1<=.05)/reps#
POWER_armyear<-sum(R2$arm.year.1<=.05)/reps#
POWER_both<-sum(R2$arm.1<=.05 & R2$arm.year.1<=.05) / reps#
#
print(paste("Size:", SIZE, "High mu", muH, "Low mu", muL, sep=" "))#
print(paste("Power arm:", POWER_arm, sep=" "))#
print(paste("Power armyear:", POWER_armyear, sep=" "))#
print(paste("Power both", POWER_both, sep=" "))
OUT
out
### CALL PACKAGES#
library(maptools)#
library(maps)#
library(mapdata)#
library(mapproj)#
library(rworldmap)#
library(ggmap)#
#library(Rcpp)#
library(ggplot2)#
library(raster)#
library(magick)#
library(cowplot)#
#
### SET WORKING DIRECTORY#
setwd("~/PETM-shiny/allAQPData/Scripts")#
#
### CALL AND CHECK DATASETS#
df_gps <- read.csv("gpsdata_COMPLETE.csv", header=T, sep = " ")#
df_insp <- read.csv("inspecciones_COMPLETE.csv", header=T, sep = " ")#
df_denuncias <- read.csv("denuncias/Denuncias.csv")#
df_inspAR <- read.csv("ALTO_RIESGO_INSPECCIONES.csv") #
df_cerro <- read.csv("C:/Users/Micaela/rociado_cerro.csv")#
### cHECK DATASETS#
#
## SPRAYED HOUSES DATASET#
head(df_gps)#
str(df_gps) # 229336 obs. of  7 variables#
names(df_gps)#
# [1] "UNICODE"     "LATITUDE"    "LONGITUDE"   "FECHA"       "block"      #
# [6] "pos_sprayed" "not_sprayed"#
#
# Sprayed variables#
unique(df_gps$pos_sprayed) #  0  1 NA#
# It means that in sprayed houses were chirimachas - 1, or that were not - 0. #
# NA is not participated#
#
unique(df_gps$not_sprayed) # 0 1#
# It means that the house was sprayed  - 0, or not sprayed - 1. #
#
## Keep only urban houses.#
names(df_gps)#
head(df_gps)#
df_gps$L_only <- substr(df_gps$UNICODE, 3, 4)#
sum(is.na(df_gps$L_only)) # 0 #
str(df_gps$L_only)#
df_gps$L_only.n <- as.numeric(df_gps$L_only)#
sum(is.na(df_gps$L_only)) # 0#
# subset#
df_gps1 <- df_gps[df_gps$L_only.n != 9,]#
df_gps1 <- df_gps1[df_gps1$L_only.n != 28,]#
## Keep only sprayed houses.#
# Those that are 1 or 0 in both pos_sprayed and not_sprayed#
df_gps1 <- df_gps1[df_gps1$not_sprayed == 0,]#
dim(df_gps1) # [1] 126731       9#
unique(df_gps1$pos_sprayed) #  0  1#
sum(is.na(df_gps1$pos_sprayed)) #  0#
### SPRAYED HOUSES DATASETS ####
### MODIFY DATES#
df_gps1$SPRAY_DATE <- as.Date(df_gps1$FECHA, format = "%Y-%m-%d")#
df_gps1[na.omit(df_gps1$FECHA), c("FECHA","SPRAY_DATE")]#
df_gps1[c(200000:200010), c("FECHA","SPRAY_DATE")]#
df_gps1$SPRAY_YEAR <- format(as.Date(df_gps1$FECHA, format = "%Y-%m-%d"), "%Y")#
df_gps1[c(200000:200010), c("FECHA","SPRAY_DATE", "SPRAY_YEAR")]#
#
# Check NAs in dates#
sum(is.na(df_gps1$SPRAY_YEAR)) # [1] 0#
sum(is.na(df_gps1$SPRAY_DATE)) # [1] 0#
sum(is.na(df_gps1$FECHA))      # [1] 0#
#
# Check years#
unique(df_gps1$SPRAY_YEAR)  #
# [1] "2014" "2015" "2011" "2012" "2009" "2003" "2004" "2005" "2006" "2007"#
# [11] "2008" "2013"#
df_gps1$year.n <- as.numeric(df_gps1$SPRAY_YEAR) #
sort(unique(df_gps1$year.n))#
# [1] 2003 2004 2005 2006 2007 2008 2009 2011 2012 2013 2014 2015#
#
# NAs in long and lat#
sum(is.na(df_gps1$LONGITUDE)) # 1461#
sum(is.na(df_gps1$LATITUDE)) # 1461#
##### CERRO DATA ######
names(df_cerro)#
# [1] "UNICODE"           "LONGITUDE"         "LATITUDE"         #
# [4] "STATUS1C"          "FECHA_CUANTI"      "POS_CHIRI"        #
# [7] "STATUS_IICC"       "FECHA_CUANTI_IICC" "pos_CII"          #
# [10] "SPRAYED"           "POSITIVE_SPRAYED"#
#
str(df_cerro) # 1578 obs. of  11 variables:#
## Keep only sprayed ones#
unique(df_cerro$SPRAYED) # 1 NA#
table(df_cerro$SPRAYED) # 1469 #
sum(is.na(df_cerro$SPRAYED)) # 109#
df_cerro1 <- df_cerro[!is.na(df_cerro$SPRAYED),]#
#
## Keep only 2016 ones#
sum(is.na(df_cerro1$FECHA_CUANTI_IICC)) # 165#
sum(is.na(df_cerro1$FECHA_CUANTI)) # 144#
#
# Create YEAR_CUANTI#
df_cerro1$SPRAY_CUANTI <- as.Date(df_cerro1$FECHA_CUANTI, format = "%Y-%m-%d")#
df_cerro1[na.omit(df_cerro1$FECHA_CUANTI), c("FECHA_CUANTI","SPRAY_CUANTI")]#
df_cerro1[c(200000:200010), c("FECHA_CUANTI","SPRAY_CUANTI")]#
df_cerro1$SPRAY_YEAR1 <- format(as.Date(df_cerro1$FECHA_CUANTI, format = "%Y-%m-%d"), "%Y")#
df_cerro1[c(200000:200010), c("FECHA_CUANTI","SPRAY_CUANTI", "SPRAY_YEAR1")]#
#
class(df_cerro1$SPRAY_YEAR1) # chr#
unique(df_cerro1$SPRAY_YEAR1) # "2015" NA     "2016"#
#
# Create YEAR_CUANTI#
df_cerro1$SPRAY_YEAR2 <- substr(df_cerro1$FECHA_CUANTI_IICC, 1, 4)#
str(df_cerro1$SPRAY_YEAR2)# chr#
class(df_cerro1$SPRAY_YEAR2)#
unique(df_cerro1$SPRAY_YEAR2) # "2016" NA  #
table(df_cerro1$SPRAY_YEAR2, df_cerro1$SPRAY_YEAR1, useNA="always")#
#       2015 2016 <NA>#
# 2016  586  574  144#
# <NA>   70   95    0#
# our subset should have 1399#
#
df_cerro2 <- subset(df_cerro1, SPRAY_YEAR1 == "2016" | #
                      (SPRAY_YEAR1 == "2015" & SPRAY_YEAR2 == "2016") |#
                      (is.na(SPRAY_YEAR1) & SPRAY_YEAR2 == "2016"))#
nrow(df_cerro2) # 1399#
#
### Check positive#
table(df_cerro2$SPRAY_YEAR2, df_cerro2$SPRAY_YEAR1, useNA="always")#
#         2015 2016 <NA>#
#   2016  586  574  144#
#  <NA>    0   95    0#
# Keep positive#
table(df_cerro$SPRAYED, df_cerro$POSITIVE_SPRAYED, useNA="always")#
#         1 <NA>#
#   1     51 1418#
# <NA>    0  109#
#
table(df_cerro1$SPRAYED, df_cerro1$POSITIVE_SPRAYED, useNA="always")#
#          1 <NA>#
#   1      51 1418#
# <NA>    0    0#
#
table(df_cerro2$SPRAYED, df_cerro2$POSITIVE_SPRAYED, useNA="always")#
#          1 <NA>#
#   1      48 1351#
# <NA>    0    0#
#
# subset#
unique(df_cerro2$POSITIVE_SPRAYED) # NA  1#
df_cerro2_pos <- df_cerro2[!is.na(df_cerro2$POSITIVE_SPRAYED), ]#
nrow(df_cerro2_pos) # 48
### CALL PACKAGES#
library(maptools)#
library(maps)#
library(mapdata)#
library(mapproj)#
library(rworldmap)#
library(ggmap)#
#library(Rcpp)#
library(ggplot2)#
library(raster)#
library(magick)#
library(cowplot)
install.packages('rworldmap','ggmap','magick')
install.packages('rworldmap')
setwd("~/Dropbox/Levy Lab/bb_properties/bb disclosure code")
library(deSolve)#
#setwd("~/Dropbox/Levy Lab/bb_properties/bb disclosure code")#
setwd("/Users/mzlevy/Dropbox/bb disclosure code")#
# Source the functions we will need for our analyses.#
source("functions.R")
bprev.vec <- seq(0.001, 0.1, length.out = 100)#
d.vec <- seq(0.01, 1, length.out = 100)
costmat20 <- GetCostMatrix(bprev.vec, d.vec, nyears = 20)#
saveRDS(costmat20, "costmatrix/costmat_yr20.rds")
costmat6 <- GetCostMatrix(bprev.vec, d.vec, nyears = 6)#
costmat20 <- GetCostMatrix(bprev.vec, d.vec, nyears = 20)#
saveRDS(costmat6, "costmatrix/costmat_yr6.rds")#
saveRDS(costmat20, "costmatrix/costmat_yr20.rds")
costmat6 <- GetCostMatrix(bprev.vec, d.vec, nyears = 6)#
costmat20 <- GetCostMatrix(bprev.vec, d.vec, nyears = 20)#
saveRDS(costmat6, "costmatrix/costmat_yr6.rds")#
saveRDS(costmat20, "costmatrix/costmat_yr20.rds")
